name: Weekly Regression Tests

on:
  schedule:
    # 4am UTC = 12am EDT (Saturday)
    - cron: '0 4 * * 6'

  # Allows you to run this workflow manually from the Actions tab and change the
  # testing environment and OSF service.
  workflow_dispatch:
    inputs:
      domain:
        description: 'Testing Environment'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - stage1
        - stage2
        - stage3
      service:
        description: 'OSF Service'
        required: true
        default: 'All'
        type: choice
        options:
        - All
        - Preprints
        - Registries
        - Meetings
        - Institutions
        - Projects
        - Collections
        - Users
        - Other

env:
  DRIVER: "Remote"
  DEFAULT_DOMAIN: test
  DEFAULT_SERVICE: All
  DOMAIN: ${{ github.event.inputs.domain }}
  NEW_USER_EMAIL: ${{ secrets.NEW_USER_EMAIL }}
  BSTACK_USER: ${{ secrets.BROWSERSTACK_USERNAME }}
  BSTACK_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
  CHROME_USER: ${{ secrets.CHROME_USER }}
  CHROME_USER_TOKEN: ${{ secrets.CHROME_USER_TOKEN }}
  EDGE_USER: ${{ secrets.EDGE_USER }}
  EDGE_USER_TOKEN: ${{ secrets.EDGE_USER_TOKEN }}
  FIREFOX_USER: ${{ secrets.FIREFOX_USER }}
  FIREFOX_USER_TOKEN: ${{ secrets.FIREFOX_USER_TOKEN }}
  USER_ONE: ${{ secrets.USER_ONE }}
  USER_ONE_PASSWORD: ${{ secrets.USER_ONE_PASSWORD }}
  USER_TWO: ${{ secrets.USER_TWO }}
  USER_TWO_PASSWORD: ${{ secrets.USER_TWO_PASSWORD }}
  DEACTIVATED_USER: ${{ secrets.DEACTIVATED_USER }}
  DEACTIVATED_USER_PASSWORD: ${{ secrets.DEACTIVATED_USER_PASSWORD }}
  UNCONFIRMED_USER: ${{ secrets.UNCONFIRMED_USER }}
  UNCONFIRMED_USER_PASSWORD: ${{ secrets.UNCONFIRMED_USER_PASSWORD }}
  CAS_2FA_USER: ${{ secrets.CAS_2FA_USER }}
  CAS_2FA_USER_PASSWORD: ${{ secrets.CAS_2FA_USER_PASSWORD }}
  CAS_TOS_USER: ${{ secrets.CAS_TOS_USER }}
  CAS_TOS_USER_PASSWORD: ${{ secrets.CAS_TOS_USER_PASSWORD }}
  DEVAPP_CLIENT_ID: ${{ secrets.DEVAPP_CLIENT_ID }}
  DEVAPP_CLIENT_SECRET: ${{ secrets.DEVAPP_CLIENT_SECRET }}
  IMAP_EMAIL: ${{ secrets.IMAP_EMAIL }}
  IMAP_EMAIL_PASSWORD: ${{ secrets.IMAP_EMAIL_PASSWORD }}
  IMAP_HOST: ${{ secrets.IMAP_HOST }}

jobs:

  build:
    runs-on: ubuntu-20.04
    env:
      GHA_DISTRO: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Build Requirements
        id: pip-cache-step
        uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.GHA_DISTRO }}-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
      - name: install dependencies
        if: steps.pip-cache-step.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          invoke requirements

  # Need to set the Domain and Service values in this job first so that
  # when the workflow is run from the scheduler the correct default values
  # will be used since the scheduler does not have inputs.
  set_domain_and_service:
    name: Set the Domain and Service for Regression Tests
    runs-on: ubuntu-20.04
    outputs:
      domain: ${{ github.event.inputs.domain || env.DEFAULT_DOMAIN }}
      service: ${{ github.event.inputs.service || env.DEFAULT_SERVICE }}
    steps:
      - run: echo "Set Domain and Service Values"

  regression_test:
    name: Regression tests (${{ matrix.browser }})
    needs: [build, set_domain_and_service]
    runs-on: ubuntu-20.04
    env:
      GHA_DISTRO: ubuntu-20.04
    strategy:
      fail-fast: false
      max-parallel: 1  # run in series
      matrix:
        browser: [chrome, firefox, edge]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          python-version: 3.6
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.GHA_DISTRO }}-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
      - if: ${{ needs.set_domain_and_service.outputs.service == 'All' }}
        name: run all regression tests in ${{ env.DOMAIN }}
        env:
          TEST_BUILD: ${{ matrix.browser }}
          DOMAIN: ${{ needs.set_domain_and_service.outputs.domain }}
        run: |
          invoke test_all_selenium_part_one
          invoke test_all_selenium_part_two
      - if: ${{ github.event.inputs.service == 'Preprints' }}
        name: run preprints regression tests in ${{ env.DOMAIN }}
        env:
          TEST_BUILD: ${{ matrix.browser }}
        run: |
          invoke test_preprints_regression
      - if: ${{ github.event.inputs.service == 'Registries' }}
        name: run registries regression tests in ${{ env.DOMAIN }}
        env:
          TEST_BUILD: ${{ matrix.browser }}
        run: |
          invoke test_registries_regression
      - if: ${{ github.event.inputs.service == 'Meetings' }}
        name: run meetings regression tests in ${{ env.DOMAIN }}
        env:
          TEST_BUILD: ${{ matrix.browser }}
        run: |
          invoke test_meetings_regression
      - if: ${{ github.event.inputs.service == 'Institutions' }}
        name: run institutions regression tests in ${{ env.DOMAIN }}
        env:
          TEST_BUILD: ${{ matrix.browser }}
        run: |
          invoke test_institutions_regression
      - if: ${{ github.event.inputs.service == 'Projects' }}
        name: run projects regression tests in ${{ env.DOMAIN }}
        env:
          TEST_BUILD: ${{ matrix.browser }}
        run: |
          invoke test_projects_regression
      - if: ${{ github.event.inputs.service == 'Collections' }}
        name: run collections regression tests in ${{ env.DOMAIN }}
        env:
          TEST_BUILD: ${{ matrix.browser }}
        run: |
          invoke test_collections_regression
      - if: ${{ github.event.inputs.service == 'Users' }}
        name: run users regression tests in ${{ env.DOMAIN }}
        env:
          TEST_BUILD: ${{ matrix.browser }}
        run: |
          invoke test_users_regression
      - if: ${{ github.event.inputs.service == 'Other' }}
        name: run other regression tests in ${{ env.DOMAIN }}
        env:
          TEST_BUILD: ${{ matrix.browser }}
        run: |
          invoke test_other_regression
